WITH RAW_FORECAST AS (

  SELECT 
    SIT_SITE_ID,
    MATERIAL_ID,
    SAP_SKU,
    ITE_ITEM_INVENTORY_ID,
    PERIOD,
    Q_50,
    CUTOFF,
    ROW_NUMBER() OVER( PARTITION BY SIT_SITE_ID, MATERIAL_ID, SAP_SKU, ITE_ITEM_INVENTORY_ID, PERIOD ORDER BY CUTOFF DESC) AS RW
  FROM WHOWNER.BT_1P_FORECAST
  WHERE 1=1 
    --AND SAP_SKU = "000000000001082927"
    --AND PERIOD = '2025-03-31'
    AND SKU_INACTIVE_FLG = FALSE
    AND PERIOD = DATE_TRUNC(PERIOD,ISOWEEK)
    AND PERIOD >= DATE_TRUNC(CURRENT_DATE,ISOWEEK)
    AND PERIOD <= DATE_ADD(DATE_TRUNC(CURRENT_DATE,ISOWEEK), INTERVAL +5 WEEK)
  QUALIFY RW = 1
  ORDER BY PERIOD DESC

)

, FORECAST_WEEKLY AS (
  SELECT R.SIT_SITE_ID
    ,R.ITE_ITEM_INVENTORY_ID
    ,PERIOD
    ,SUM(Q_50) AS ORDERS_FORECAST
  FROM RAW_FORECAST R
  --LEFT JOIN WHOWNER.LK_PL1P_ITE_VAR_SKU SK ON R.SIT_SITE_ID = SK.SIT_SITE_ID AND R.SAP_SKU = SK.ITE_ITEM_SAP_SKU -- Pode se duplicar linhas quando um SKU esteja em mais de um item_id ; Ex: Tradicional e CatÃ¡logo
  GROUP BY ALL
)

SELECT 
  F.SIT_SITE_ID,
  F.ITE_ITEM_INVENTORY_ID,
  F.PERIOD,
  --S.DOW,
  --S.HOUR_ORDER,
  DATE_ADD(PERIOD, INTERVAL MOD(DOW + 7  - 2, 7) DAY) AS TIM_DAY,
  --DATETIME_ADD( CAST(DATE_ADD(PERIOD, INTERVAL MOD(DOW + 7  - 2, 7) DAY) AS DATETIME), INTERVAL HOUR_ORDER HOUR) AS TIM_DATETIME,
  SUM(F.ORDERS_FORECAST* SHARE_TSI) AS ORDERS_FORECAST
FROM FORECAST_WEEKLY F
LEFT JOIN SBOX_PRICING1P.AUX_SAZONALIDADE_SEMANAL S ON F.SIT_SITE_ID = S.SIT_SITE_ID
WHERE DATETIME_ADD( CAST(DATE_ADD(PERIOD, INTERVAL MOD(DOW + 7  - 2, 7) DAY) AS DATETIME), INTERVAL HOUR_ORDER HOUR) >= CURRENT_DATETIME
GROUP BY ALL
WITH BPC_DATA_ABC AS (

    SELECT F.TIM_DAY
        ,F.SIT_SITE_ID
        --,F.MELI_ID_TYPE
        ,CONCAT(F.SIT_SITE_ID,F.MELI_ID) AS MELI_ID
        ,F.FAVORABILITY_TYPE
        ,F.ITE_ITEM_ID
        ,CONCAT(F.SIT_SITE_ID, F.ITE_ITEM_ID) AS ITEM_ID
        ,F.VERTICAL
        ,F.DOM_AGG_2 AS DOM_DOMAIN_AGG2
        ,F.BRAND
        ,CAST(F.PRICE_MELI AS FLOAT64) AS PRICE_MELI
        ,F.COMP_ITEM_ID_WINNER
        ,CAST(F.COMP_PRICE_RIVAL AS FLOAT64) AS COMP_PRICE_RIVAL_ABC
        --,F.VISITS_TOTAL
        ,CAST(F.VISITS_MATCH AS FLOAT64) AS VISITS_MATCH
        ,CAST(F.VISITS_EXPENSIVE AS FLOAT64) AS VISITS_EXPENSIVE
        , CAST(COALESCE(F.VISITS_MATCH,0)- COALESCE(F.VISITS_EXPENSIVE,0) AS FLOAT64) AS VISITS_COMPETITIVE
    FROM `WHOWNER.BT_COM_FAVORABILITY`F 
    WHERE FAVORABILITY_TYPE = 'LANDED_1P_ABC'
        AND SIT_SITE_ID IN  ('MLB','MLM', 'MLC', 'MCO', 'MLA')
        --AND TIM_DAY >= '2025-02-07' -- ROLLOUT DE COSTO FINANCIERO
        AND DATE_TRUNC(TIM_DAY,MONTH) = DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL -1 MONTH),MONTH)
        AND F.VISITS_MATCH > 0

),

BPC_DATA_AB AS (

    SELECT F.TIM_DAY
        ,F.SIT_SITE_ID
        --,F.MELI_ID_TYPE
        ,CONCAT(F.SIT_SITE_ID,F.MELI_ID) AS MELI_ID
        ,F.FAVORABILITY_TYPE
        ,F.ITE_ITEM_ID
        ,CONCAT(F.SIT_SITE_ID, F.ITE_ITEM_ID) AS ITEM_ID
        ,F.VERTICAL
        ,F.DOM_AGG_2 AS DOM_DOMAIN_AGG2
        ,F.BRAND
        ,CAST(F.PRICE_MELI AS FLOAT64) AS PRICE_MELI
        ,F.COMP_ITEM_ID_WINNER
        ,CAST(F.COMP_PRICE_RIVAL AS FLOAT64) AS COMP_PRICE_RIVAL_ABC
        --,F.VISITS_TOTAL
        ,CAST(F.VISITS_MATCH AS FLOAT64) AS VISITS_MATCH
        ,CAST(F.VISITS_EXPENSIVE AS FLOAT64) AS VISITS_EXPENSIVE
        , CAST(COALESCE(F.VISITS_MATCH,0)- COALESCE(F.VISITS_EXPENSIVE,0) AS FLOAT64) AS VISITS_COMPETITIVE
    FROM `WHOWNER.BT_COM_FAVORABILITY`F 
    WHERE FAVORABILITY_TYPE = 'LANDED_1P_AB'
        AND SIT_SITE_ID IN  ('MLB','MLM', 'MLC', 'MCO', 'MLA')
        --AND TIM_DAY >= '2025-02-07' -- ROLLOUT DE COSTO FINANCIERO
        AND DATE_TRUNC(TIM_DAY,MONTH) = DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL -1 MONTH),MONTH)
        AND F.VISITS_MATCH > 0

),

BPC_DATA AS (
    SELECT B_ABC.*
        ,B_AB.COMP_PRICE_RIVAL_ABC
    FROM BPC_DATA_ABC B_ABC 
    LEFT JOIN BPC_DATA_AB B_AB ON B_ABC.TIM_DAY = B_AB.TIM_DAY AND B_ABC.SIT_SITE_ID = B_AB.SIT_SITE_ID AND B_ABC.MELI_ID = B_AB.MELI_ID
)

FLOOR_INFO AS (

    SELECT CAST(UPDATED_DATE AS DATE) AS TIM_DAY
    ,ITEM_ID
    ,COST
    ,CCOGS
    ,SIT_SITE_IVA
    ,FINANCIAL_COST
    ,INSTALLMENTS
    ,PPM_PROFIT_FLOOR
    ,PPM_CALCULATED_FLOOR_PRICE
    ,UPDATED_DATE
    ,ROW_NUMBER() OVER (PARTITION BY CAST(UPDATED_DATE AS DATE) , ITEM_ID ORDER BY UPDATED_DATE DESC) AS RW
    FROM WHOWNER.LK_PL1P_UE_MATERIAL_SUMMARIZATION_HISTORY
    WHERE UPDATED_DATE >= '2024-01-01'
    QUALIFY RW = 1

),




ELASTICIDAD AS ( -- Trazer a elasticidade por AGG2
  WITH 
  
  TGMV_TOTAL_ITEM AS (
  
  SELECT 
    --TIM_DAY,
    SIT_SITE_ID,
    ITE_ITEM_ID,
    DOM_DOMAIN_AGG2,
    SUM(COALESCE(TGMV_IVA_DEDUCTED_LC,0)) AS TGMV_IVA_DEDUCTED_LC,
  FROM WHOWNER.DM_MKP_PL1P_PRICING
  WHERE 1=1
      AND SIT_SITE_ID IN ('MLB','MLM', 'MLC', 'MCO', 'MLA')
      AND DATE_TRUNC(TIM_DAY,MONTH) = DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL -1 MONTH),MONTH)
      AND TGMV_IVA_DEDUCTED_LC > 0

  GROUP BY ALL

  )

  SELECT  
    TTI.SIT_SITE_ID,
    TTI.DOM_DOMAIN_AGG2,
    SUM(B * TGMV_IVA_DEDUCTED_LC)/SUM(TGMV_IVA_DEDUCTED_LC) AS B,      
  FROM TGMV_TOTAL_ITEM TTI
  LEFT JOIN meli-bi-data.WHOWNER.DM_PL1P_ELAST_ITEMS_OUTPUT E ON TTI.SIT_SITE_ID = E.SIT_SITE_ID  AND TTI.ITE_ITEM_ID = E.ITE_ITEM_ID
  WHERE TTI.SIT_SITE_ID  IN ('MLB','MLM', 'MLC', 'MCO', 'MLA')
    AND B IS NOT NULL
  GROUP BY ALL

  UNION ALL   


 SELECT  
    TTI.SIT_SITE_ID,
    'TOTAL_SITE' AS DOM_DOMAIN_AGG2,
    SUM(B * TGMV_IVA_DEDUCTED_LC)/SUM(TGMV_IVA_DEDUCTED_LC) AS B,      
  FROM TGMV_TOTAL_ITEM TTI
  LEFT JOIN meli-bi-data.WHOWNER.DM_PL1P_ELAST_ITEMS_OUTPUT E ON TTI.SIT_SITE_ID = E.SIT_SITE_ID  AND TTI.ITE_ITEM_ID = E.ITE_ITEM_ID
  WHERE TTI.SIT_SITE_ID  IN ('MLB','MLM', 'MLC', 'MCO', 'MLA')
    AND B IS NOT NULL
  GROUP BY ALL
),


PRICES_LAST_MONTH AS (

    SELECT 
        DM.TIM_DAY,
        -- DM.LAST_UPDATED_FROM_DTTM,
        -- DM.LAST_UPDATED_TO_DTTM,
        -- CASE WHEN DM.LAST_UPDATED_FROM_DTTM > DM.TIM_DAY THEN LAST_UPDATED_FROM_DTTM ELSE CAST(DM.TIM_DAY AS DATETIME) END AS PRICE_BEGIN,
        -- CASE WHEN DM.LAST_UPDATED_TO_DTTM > DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) THEN CAST(DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) AS DATETIME) ELSE DM.LAST_UPDATED_TO_DTTM END AS PRICE_END,
        DM.SIT_SITE_ID,
        DM.VERTICAL,
        DM.DOM_DOMAIN_AGG2,
        DM.ITE_ATT_BRAND,
        DM.MELI_ID,
        DM.ITE_ITEM_ID,
        ITE_ITEM_STATUS,
        -- ITE_ITEM_BLACKLIST,
        ITE_SITE_CURRENT_PRICE,
        PL1P_PRICING_CURRENT_WINNING_STRATEGY,
        -- ITE_ITEM_PRICE_AMOUNT_STANDARD,
        -- ITE_ITEM_PRICE_AMOUNT_PROMOTION,
        -- COMPETITORS_PRICE_VALUE,
        -- COMPETITORS_PRICE_STATUS,
        -- BUYBOX_WINNER_PRICE_VALUE,
        -- BUYBOX_WINNER_PRICE_STATUS,
        -- PROFITABILITY_PRICE_VALUE,
        -- PROFITABILITY_PRICE_STATUS,
        -- PROFITABILITY_PRICE_RENT,
        SUM(DATETIME_DIFF(
            CASE WHEN DM.LAST_UPDATED_TO_DTTM > DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) THEN CAST(DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) AS DATETIME) ELSE DM.LAST_UPDATED_TO_DTTM END
            , CASE WHEN DM.LAST_UPDATED_FROM_DTTM > DM.TIM_DAY THEN LAST_UPDATED_FROM_DTTM ELSE CAST(DM.TIM_DAY AS DATETIME) END  
            ,SECOND)) AS PRICE_DURATION,
        SUM(TSI) AS TSI,
        SUM(TGMV_LC) AS TGMV_LC,
    FROM WHOWNER.DM_MKP_PL1P_PRICING DM
    WHERE SIT_SITE_ID IN ('MLB','MLM','MLC','MCO','MLA')
        -- AND ITE_ITEM_STATUS = 'ACTIVE'
        AND DATE_TRUNC(TIM_DAY,MONTH) = DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL -1 MONTH),MONTH)
        AND DATETIME_DIFF(
            CASE WHEN DM.LAST_UPDATED_TO_DTTM > DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) THEN CAST(DATE_ADD(DM.TIM_DAY,INTERVAL 1 DAY) AS DATETIME) ELSE DM.LAST_UPDATED_TO_DTTM END
            , CASE WHEN DM.LAST_UPDATED_FROM_DTTM > DM.TIM_DAY THEN LAST_UPDATED_FROM_DTTM ELSE CAST(DM.TIM_DAY AS DATETIME) END  
            ,SECOND) > 0
    GROUP BY ALL
)

, SALES_ESTIMATED AS (

    SELECT 
        TIM_DAY,
        SIT_SITE_ID,
        MELI_ID,
        SUM(TSI) AS TSI,
        CAST(SUM(TGMV_LC) AS FLOAT64) AS TGMV_LC,
    FROM PRICES_LAST_MONTH
    GROUP BY ALL
),


BPC_PLUS_PRICES AS (
  SELECT COALESCE(B.TIM_DAY, PLM.TIM_DAY) AS TIM_DAY, --FAZER OS COALESCES
        COALESCE(B.SIT_SITE_ID, PLM.SIT_SITE_ID) AS SIT_SITE_ID,
        COALESCE(B.MELI_ID, PLM.MELI_ID) AS MELI_ID,
        COALESCE(B.ITE_ITEM_ID,PLM.ITE_ITEM_ID) as ITE_ITEM_ID,
        CONCAT(COALESCE(B.SIT_SITE_ID, PLM.SIT_SITE_ID) , COALESCE(B.ITE_ITEM_ID,PLM.ITE_ITEM_ID) ) as ITEM_ID,
        --B.ITEM_ID
        COALESCE(B.VERTICAL,PLM.VERTICAL) AS VERTICAL,
        COALESCE(B.DOM_DOMAIN_AGG2,PLM.DOM_DOMAIN_AGG2) AS DOM_DOMAIN_AGG2,
        COALESCE(B.BRAND,PLM.ITE_ATT_BRAND) AS ITE_ATT_BRAND,
        B.PRICE_MELI,
        B.COMP_ITEM_ID_WINNER,
        B.COMP_PRICE_RIVAL_ABC,
        B.COMP_PRICE_RIVAL_AB,
        --F.VISITS_TOTAL
        B.VISITS_MATCH,
        B.VISITS_EXPENSIVE,
        B.VISITS_COMPETITIVE,
        PLM.PL1P_PRICING_CURRENT_WINNING_STRATEGY,
        ROW_NUMBER() OVER ( PARTITION BY COALESCE(B.TIM_DAY, PLM.TIM_DAY), COALESCE(B.SIT_SITE_ID, PLM.SIT_SITE_ID), COALESCE(B.MELI_ID,PLM.MELI_ID) ORDER BY COALESCE(ABS(B.PRICE_MELI - PLM.ITE_SITE_CURRENT_PRICE),9999999999999) , COALESCE(PLM.TSI,0) DESC, COALESCE(PRICE_DURATION,0) DESC ) AS RW
  FROM BPC_DATA B
  FULL JOIN PRICES_LAST_MONTH PLM ON B.TIM_DAY = PLM.TIM_DAY AND B.SIT_SITE_ID = PLM.SIT_SITE_ID AND B.MELI_ID = PLM.MELI_ID 
  WHERE (B.VISITS_MATCH > 0 OR PLM.TSI > 0)
  QUALIFY RW = 1
),



JOIN_TABLE AS (
    SELECT B.*
        ,S.TSI
        ,S.TGMV_LC
        ,F.COST
        ,F.CCOGS
        ,F.SIT_SITE_IVA
        ,F.FINANCIAL_COST
        ,F.INSTALLMENTS
        ,F.PPM_PROFIT_FLOOR
        ,F.PPM_CALCULATED_FLOOR_PRICE
        ,F.UPDATED_DATE
        ,ROW_NUMBER() OVER (PARTITION BY B.MELI_ID, B.TIM_DAY ORDER BY F.UPDATED_DATE  DESC) AS RW2
    FROM BPC_PLUS_PRICES AS B
    LEFT JOIN SALES_ESTIMATED AS S ON B.SIT_SITE_ID = S.SIT_SITE_ID AND B.MELI_ID = S.MELI_ID AND B.TIM_DAY = S.TIM_DAY
    LEFT JOIN FLOOR_INFO F ON B.ITEM_ID = F.ITEM_ID AND B.TIM_DAY >= F.TIM_DAY
    QUALIFY RW2 =1

),

FINAL_TABLE AS (
    SELECT J.*,
        E_AGG2.B AS B_AGG2,
        E_TS.B AS B_TOTAL_STE,
        CASE WHEN COALESCE(E_AGG2.B,E_TS.B,0) < 0 THEN COALESCE(E_AGG2.B,E_TS.B,0) ELSE 0 END  AS B_EFECTIVO
    FROM JOIN_TABLE J
    LEFT JOIN ELASTICIDAD E_AGG2 ON J.SIT_SITE_ID = E_AGG2.SIT_SITE_ID AND J.DOM_DOMAIN_AGG2 = E_AGG2.DOM_DOMAIN_AGG2
    LEFT JOIN ELASTICIDAD E_TS ON J.SIT_SITE_ID = E_TS.SIT_SITE_ID AND E_TS.DOM_DOMAIN_AGG2 = 'TOTAL_SITE'

)

SELECT *
FROM FINAL_TABLE
-- LIMIT 10
WITH FINANCIAL_DATA AS (
    SELECT
        SITE_ID AS SIT_SITE_ID,
        CAST(ITEM_ID AS BIGINT) AS ITE_ITEM_ID,
        MAX(COST) AS COST,
        AVG(SIT_SITE_IVA) AS SIT_SITE_IVA,
        MIN(CCOGS) AS CCOGS
    FROM (
            SELECT
                fpm.SITE_ID,
                --JSON_VALUE(json_element, '$.ITEM_ID') AS MLB,
                RIGHT(JSON_VALUE(json_element, '$.ITEM_ID'), LENGTH(JSON_VALUE(json_element, '$.ITEM_ID'))-3) as ITEM_ID,
                JSON_VALUE(json_element, '$.ITEM_ID_STATUS') as ITEM_ID_STATUS,
                fpm.SKU, 
                uems.COST,
                uems.SIT_SITE_IVA,
                UEMS.CCOGS,
                --uems.INSTALLMENTS,
                --uems.FINANCIAL_COST
            FROM 
                `pdme000163-2xapypeu3xo-furyid.TBL.LK_PL1P_UE_MATERIAL_SUMMARIZATION` uems
            LEFT JOIN `pdme000163-2xapypeu3xo-furyid.TBL.LK_PL1P_FP_MATERIAL` fpm
                ON fpm.material_id = uems.material_id,
                    UNNEST(JSON_QUERY_ARRAY(MATERIAL_ITEM_ATTR)) as json_element
            WHERE fpm.MATERIAL_STATUS<>'deleted'
    )
    GROUP BY ALL
)


,ITEMS_CATALOGO AS (

    SELECT PO.SIT_SITE_ID
        ,PO.ITE_ATT_BRAND
        ,PO.ITE_ITEM_ID
        ,PO.ITE_ITEM_STATUS
        ,PO.ITE_ITEM_BLACKLIST
        ,PO.ITE_ITEM_CATALOG_LISTING_FLG
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_RENT
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_VALUE 
        ,CASE WHEN PO.PROFITABILITY_BUYBOX_FLOOR_STATUS = 'valid' THEN PO.PROFITABILITY_BUYBOX_FLOOR_RENT ELSE NULL END AS PROFITABILITY_BUYBOX_FLOOR_RENT
        ,CASE WHEN PO.PROFITABILITY_BUYBOX_FLOOR_STATUS = 'valid' THEN PO.PROFITABILITY_BUYBOX_FLOOR_VALUE ELSE NULL END AS PROFITABILITY_BUYBOX_FLOOR_VALUE
        ,FD.COST
        ,FD.SIT_SITE_IVA
        ,FD.CCOGS
        ,ROW_NUMBER() OVER(PARTITION BY PO.SIT_SITE_ID, PO.ITE_ITEM_ID ORDER BY LAST_UPDATED_FROM_DTTM DESC) as RW
    FROM `meli-bi-data.WHOWNER.LK_PL1P_PRICING_OPPS` PO
    LEFT JOIN FINANCIAL_DATA FD ON PO.SIT_SITE_ID = FD.SIT_SITE_ID AND PO.ITE_ITEM_ID = FD.ITE_ITEM_ID
    WHERE 1=1
        AND PO.ITE_ITEM_STATUS = 'ACTIVE'
        AND PO.ITE_ITEM_BLACKLIST != 'ALL' --REMOVENDO ITENS EM BLACKLIST
        AND PO.ITE_ITEM_CATALOG_LISTING_FLG = True -- MANTENDO APENAS ITENS DE CATALOGO
        AND DATE(PO.LAST_UPDATED_FROM_DTTM) <= DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)
        AND DATE(PO.LAST_UPDATED_TO_DTTM) >= DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)
    QUALIFY  RW = 1
)

, ITEMS_HERMANADOS AS (
    SELECT IH.SIT_SITE_ID
        ,IH.ITE_ITEM_ID
        ,R.ITEM_ID AS ITEM_ID_HERMANADO
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_RENT
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_VALUE 
        ,CASE WHEN PO.PROFITABILITY_BUYBOX_FLOOR_STATUS = 'valid' THEN PO.PROFITABILITY_BUYBOX_FLOOR_RENT ELSE NULL END AS PROFITABILITY_BUYBOX_FLOOR_RENT
        ,CASE WHEN PO.PROFITABILITY_BUYBOX_FLOOR_STATUS = 'valid' THEN PO.PROFITABILITY_BUYBOX_FLOOR_VALUE ELSE NULL END AS PROFITABILITY_BUYBOX_FLOOR_VALUE
        ,FD.COST
        ,FD.SIT_SITE_IVA
        ,FD.CCOGS
        ,ROW_NUMBER() OVER(PARTITION BY PO.SIT_SITE_ID, PO.ITE_ITEM_ID ORDER BY PO.LAST_UPDATED_FROM_DTTM DESC) as RW
    FROM `meli-bi-data.WHOWNER.LK_ITE_ITEMS` IH, unnest (ITE_ITEM_RELATIONS) as R  
    LEFT JOIN `meli-bi-data.WHOWNER.LK_PL1P_PRICING_OPPS` PO ON IH.SIT_SITE_ID = PO.SIT_SITE_ID AND R.ITEM_ID = PO.ITE_ITEM_ID
    LEFT JOIN FINANCIAL_DATA FD ON PO.SIT_SITE_ID = FD.SIT_SITE_ID AND PO.ITE_ITEM_ID = FD.ITE_ITEM_ID
    WHERE IH.ITE_ITEM_PARTY_TYPE_ID = '1P'
        AND CONCAT(IH.SIT_SITE_ID , CAST(IH.ITE_ITEM_ID AS STRING)) IN (SELECT CONCAT(IC.SIT_SITE_ID , CAST(IC.ITE_ITEM_ID AS STRING)) FROM ITEMS_CATALOGO IC)
        AND PO.ITE_ITEM_STATUS = 'ACTIVE'
        AND PO.ITE_ITEM_BLACKLIST != 'ALL' --REMOVENDO ITENS EM BLACKLIST
        AND PO.ITE_ITEM_CATALOG_LISTING_FLG = False -- TRAZENDO SOMENTE ITENS DE LISTADO HERMANADOS
        AND DATE(PO.LAST_UPDATED_FROM_DTTM) <= DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)
        AND DATE(PO.LAST_UPDATED_TO_DTTM) >= DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)
    QUALIFY  RW = 1
)

,JOIN_TABLE AS ( -- Trocar Coalesce por CASE WHEN IH.ITEM_ID_HERMANADO IS NULL
    SELECT IC.SIT_SITE_ID
      ,IC.ITE_ATT_BRAND
        ,IC.ITE_ITEM_ID 
        ,IC.ITE_ITEM_STATUS
        ,IC.ITE_ITEM_BLACKLIST
        ,IC.ITE_ITEM_CATALOG_LISTING_FLG
        ,COALESCE(IH.ITEM_ID_HERMANADO,IC.ITE_ITEM_ID) AS ITE_ITEM_REF -- ITEM DE REFERENCIA PARA A ESTRATEGIA DE BBWINNER
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_RENT
        -- ,NULL AS PROFITABILITY_BUYBOX_FLOOR_VALUE
        ,CASE WHEN IH.ITEM_ID_HERMANADO IS NOT NULL THEN IH.PROFITABILITY_BUYBOX_FLOOR_RENT ELSE IC.PROFITABILITY_BUYBOX_FLOOR_RENT END AS PROFITABILITY_BUYBOX_FLOOR_RENT
        ,CASE WHEN IH.ITEM_ID_HERMANADO IS NOT NULL THEN IH.PROFITABILITY_BUYBOX_FLOOR_VALUE ELSE IC.PROFITABILITY_BUYBOX_FLOOR_VALUE END AS PROFITABILITY_BUYBOX_FLOOR_VALUE
        ,CASE WHEN IH.ITEM_ID_HERMANADO IS NOT NULL THEN IH.COST ELSE IC.COST END AS COST
        ,CASE WHEN IH.ITEM_ID_HERMANADO IS NOT NULL THEN IH.SIT_SITE_IVA ELSE IC.SIT_SITE_IVA END AS SIT_SITE_IVA
        ,CASE WHEN IH.ITEM_ID_HERMANADO IS NOT NULL THEN IH.CCOGS ELSE IC.CCOGS END AS CCOGS
        ,pa.VISITAS_1P
        ,pa.VISITS_TOTALES

    FROM ITEMS_CATALOGO IC
    LEFT JOIN ITEMS_HERMANADOS IH ON IC.SIT_SITE_ID = IH.SIT_SITE_ID AND IC.ITE_ITEM_ID = IH.ITE_ITEM_ID
    LEFT JOIN SBOX_PRICING1P.VISITAS_TOTALES pa ON pa.TIM_day = DATE(DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)) and pa.ITE_ITEM_ID = IC.ITE_ITEM_ID AND IC.SIT_SITE_ID = pa.SIT_SITE_ID
)

-- ,IM_DATA AS ( --SUBSTITUIR
--     SELECT
--         SIT_SITE_ID
--         ,ITE_ITEM_ID
--         ,MAX(UNIT_COST_ESTIMATED_LC) AS UNIT_COST_ESTIMATED_LC
--         ,MAX(UNIT_COST_SIN_SAMPA_ESTIMATED_LC) AS UNIT_COST_SIN_SAMPA_ESTIMATED_LC
--         ,CASE 
--             WHEN SIT_SITE_ID = 'MLB' THEN MAX(UNIT_COST_SIN_SAMPA_ESTIMATED_LC)
--             ELSE MAX(UNIT_COST_ESTIMATED_LC) END
--             AS UNIT_COST_CUSTOM_LC
--         ,MAX(SIT_SITE_IVA) AS SIT_SITE_IVA

--     FROM (
--         SELECT SQ.*
--             ,SK.ITE_ITEM_ID
--         FROM(
--             SELECT 
--                 SIT_SITE_ID,
--                 ITE_ITEM_SAP_SKU,
--                 UNIT_COST_ESTIMATED_LC,
--                 UNIT_COST_SIN_SAMPA_ESTIMATED_LC,
--                 SIT_SITE_IVA
--             FROM WHOWNER.BT_UE_API_INVENTORY_METRICS_PH
--             QUALIFY ROW_NUMBER() OVER(PARTITION BY SIT_SITE_ID, ITE_ITEM_SAP_SKU ORDER BY ORD_CLOSED_DT DESC ,UNIT_COST_SIN_SAMPA_ESTIMATED_LC DESC) = 1
--         ) SQ
--         LEFT JOIN `meli-bi-data.WHOWNER.LK_PL1P_ITE_VAR_SKU` SK ON SQ.SIT_SITE_ID = SK.SIT_SITE_ID AND SQ.ITE_ITEM_SAP_SKU = SK.ITE_ITEM_SAP_SKU
--         WHERE SK.ITE_ITEM_ID IS NOT NULL
--     )
--     GROUP BY 1,2

-- )

SELECT J.*
    ,L.ITE_ITEM_PRICE
    ,L.ITE_ITEM_STATUS AS BB_STRATEGY_STATUS
    ,L.BUYBOX_WINNER
    ,L.CURRENT_PRICE
    ,L.PRICE_TO_WIN
    ,L.CURRENT_PROFITABILITY_PRICE
    -- ,NULL AS SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS) AS PROFITABILITY_PARAMETERS
    -- ,NULL AS L.PROFITABILITY_OFFSET
    -- ,NULL L.TARGET_PROFITABILITY_PRICE
    ,L.STATUS_REASON
    ,L.UPLOAD_DTTM
    ,D.VERTICAL
    ,D.DOM_DOMAIN_AGG1
    ,D.DOM_DOMAIN_AGG2
    ,ROW_NUMBER() OVER (PARTITION BY L.SIT_SITE_ID, L.ITE_ITEM_ID ORDER BY L.UPLOAD_DTTM DESC) AS RW
    --,ID.SIT_SITE_IVA
    --,ID.UNIT_COST_CUSTOM_LC

    ,VD.SAP_VENDOR_ESTIMATED

    -- ,CAST(JSON_VALUE(SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS), '$.contracoogs') AS NUMERIC) AS contracoogs
    -- ,CAST(JSON_VALUE(SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS), '$.iva') AS NUMERIC) AS iva
    -- ,CAST(JSON_VALUE(SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS), '$.suggested_profit_percentage') AS NUMERIC) AS suggested_profit_percentage
    -- ,CAST(JSON_VALUE(SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS), '$.unit_cost') AS NUMERIC) AS unit_cost
    -- ,CAST(JSON_VALUE(SAFE.PARSE_JSON(L.PROFITABILITY_PARAMETERS), '$.suggested_profit_percentage') AS NUMERIC) + (CASE WHEN L.PROFITABILITY_OFFSET >= 0 THEN L.PROFITABILITY_OFFSET ELSE NULL END)  AS PPM_PISO_BUYBOX
FROM JOIN_TABLE J
LEFT JOIN `pdme000246-ula7eql32mj-furyid.TBL.LK_BUYBOX_WINNER_PRICE` L ON J.SIT_SITE_ID = L.SIT_SITE_ID AND J.ITE_ITEM_REF = L.ITE_ITEM_ID
LEFT JOIN `meli-bi-data.WHOWNER.LK_BUYBOX_PRODUCT_STATUS_PH`  B ON DATE(DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)) = B.PHOTO_ID AND J.SIT_SITE_ID = B.SIT_SITE_ID AND L.PRD_PRODUCT_ID = CONCAT(B.SIT_SITE_ID , CAST(B.PRD_PRODUCT_ID AS STRING))
LEFT JOIN `meli-bi-data.WHOWNER.LK_ITE_ITEM_DOMAINS` D ON J.SIT_SITE_ID = D.SIT_SITE_ID AND J.ITE_ITEM_ID = D.ITE_ITEM_ID
--LEFT JOIN IM_DATA ID ON J.SIT_SITE_ID = ID.SIT_SITE_ID AND J.ITE_ITEM_ID = ID.ITE_ITEM_ID AND UNIT_COST_CUSTOM_LC > 0
LEFT JOIN     
    (SELECT *
    , ROW_NUMBER() OVER(PARTITION BY SIT_SITE_ID, ITE_ITEM_ID ORDER BY CASE WHEN SAP_VENDOR_ESTIMATED  IS NOT NULL THEN 1 ELSE 0 END DESC ) AS RW 
    FROM meli-bi-data.SBOX_PLANNING_1P.VW_BRANDS_VENDORS_ITEM_ID 
    QUALIFY RW =1
    ) VD ON J.SIT_SITE_ID = VD.SIT_SITE_ID AND J.ITE_ITEM_ID = VD.ITE_ITEM_ID
WHERE B.STATUS = 'active'
    AND DATE(L.UPLOAD_DTTM) <= DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY)
    AND DATE(L.UPLOAD_DTTM) >= '2024-01-01'
QUALIFY RW = 1
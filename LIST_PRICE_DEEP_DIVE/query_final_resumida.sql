WITH RAW_DATA AS (

  SELECT *,
    CASE WHEN COALESCE(status,'null') != 'active' THEN 1 ELSE 0 END AS FLAG_INACTIVE_OFFERING,
    CASE WHEN DOM_DOMAIN_ID IN ('MLB-BABY_BOTTLES', 'MLB-BABY_PACIFIERS', 'MLB-BABY_FEEDING_PACIFIERS', 'MLB-BABIES_FORMULAS','MLB-BABY_BOTTLE_NIPPLES') THEN 1 ELSE 0 END AS FLAG_BLACKLISTED_DOMAINS,
    CASE WHEN PL1P_OFFE_SUGGESTED_PRICE_AMOUNT > 1.05 * PL1P_OFFE_UNIT_PRICE_AMOUNT THEN 0 ELSE 1 END AS FLAG_BELOW_COST_LOWER_BOUND,
    CASE WHEN PL1P_OFFE_SUGGESTED_PRICE_AMOUNT < 5 * PL1P_OFFE_UNIT_PRICE_AMOUNT THEN 0 ELSE 1 END AS FLAG_ABOVE_COST_UPPER_BOUND,
    CASE WHEN PL1P_OFFE_SUGGESTED_PRICE_AMOUNT >= COALESCE(order_max_price,0) THEN 0 ELSE 1 END AS FLAG_BELOW_L30D_MAX_ORDER_PRICE,
    FLAG_SKU_VALIDATION_EXCEPTION AS FLAG_SKIP_VALIDATION,
    CASE WHEN FIXED_LIST_PRICE IS NOT NULL THEN 1 ELSE 0 END AS FLAG_FIXED_LIST_PRICE
  FROM `meli-bi-data.SBOX_PRICING1P.LIST_PRICE_VALIDATION_INPUTS_V2` 
  -- WHERE 1=1
  --   AND COALESCE(status,'null') != 'active'
  --   AND ITE_ITEM_STATUS = 'active'
  --   AND FIXED_LIST_PRICE IS NOT NULL
)

, REDUNDANT_OFFERINGS AS (
  SELECT ITEM_ID
      ,CASE WHEN MAX(N_ACTIVE_OFFERINGS_SKU) > 1 THEN 1 ELSE 0 END AS FLAG_SKU_MULTIPLE_ACTIVE_OFFERINGS
    FROM (
    SELECT ITEM_ID,
      PL1P_OFFE_SAP_SKU,
      COUNT(1) as N_ACTIVE_OFFERINGS_SKU
    FROM RAW_DATA
    WHERE STATUS = 'active'
    GROUP BY ALL
    )
  GROUP BY ALL
)


, ITEMS AS (
  SELECT 
    SIT_SITE_ID
    ,ITEM_ID
    ,ITE_ITEM_STATUS
    ,VERTICAL
    ,DOM_DOMAIN_AGG1
    ,DOM_DOMAIN_AGG2
    ,ITE_ITEM_SCHEDULED_FLG
    ,ITE_ITEM_SUPERMARKET_FLG
    ,ITE_ATT_BRAND
    ,MAX(FIXED_LIST_PRICE) AS FIXED_LIST_PRICE
    ,MAX( FLAG_BLACKLISTED_DOMAINS) AS FLAG_BLACKLISTED_DOMAINS
    ,MIN(FLAG_INACTIVE_OFFERING) AS FLAG_INACTIVE_OFFERINGS
  FROM RAW_DATA
  GROUP BY ALL
)

, CHECKS AS (
SELECT 
  ITEM_ID
  ,MIN( CASE WHEN FLAG_SKIP_VALIDATION = 1 THEN 0 ELSE FLAG_BELOW_COST_LOWER_BOUND END) AS FLAG_BELOW_COST_LOWER_BOUND
  ,MAX( CASE WHEN FLAG_SKIP_VALIDATION = 0 THEN 1.05 * PL1P_OFFE_UNIT_PRICE_AMOUNT ELSE NULL END)  AS COST_LOWER_BOUND
  ,MIN( CASE WHEN FLAG_SKIP_VALIDATION = 1 THEN 0 ELSE FLAG_ABOVE_COST_UPPER_BOUND END) AS FLAG_ABOVE_COST_UPPER_BOUND
  ,MIN( CASE WHEN FLAG_SKIP_VALIDATION = 0 THEN 5 * PL1P_OFFE_UNIT_PRICE_AMOUNT ELSE NULL END)  AS COST_UPPER_BOUND
  ,MIN( CASE WHEN FLAG_SKIP_VALIDATION = 1 THEN 0 ELSE FLAG_BELOW_L30D_MAX_ORDER_PRICE END) AS FLAG_BELOW_L30D_MAX_ORDER_PRICE
  ,MAX( CASE WHEN FLAG_SKIP_VALIDATION = 0 THEN COALESCE(order_max_price,0) ELSE NULL END)  AS L30D_MAX_ORDER_PRICE
  , MAX(CASE WHEN (FLAG_SKIP_VALIDATION = 1) OR (FLAG_BELOW_COST_LOWER_BOUND = 0 AND FLAG_ABOVE_COST_UPPER_BOUND = 0 AND FLAG_BELOW_L30D_MAX_ORDER_PRICE = 0) THEN PL1P_OFFE_SUGGESTED_PRICE_AMOUNT ELSE NULL END)   AS VALIDATED_MAX_LIST_PRICE
FROM RAW_DATA
WHERE status = 'active'
GROUP BY ALL
)

SELECT I.*
  ,COALESCE(RO.FLAG_SKU_MULTIPLE_ACTIVE_OFFERINGS,0) AS FLAG_SKU_MULTIPLE_ACTIVE_OFFERINGS
  ,COALESCE(C.FLAG_BELOW_COST_LOWER_BOUND,0) AS FLAG_BELOW_COST_LOWER_BOUND
  ,C.COST_LOWER_BOUND
  ,COALESCE(C.FLAG_ABOVE_COST_UPPER_BOUND,0) AS FLAG_ABOVE_COST_UPPER_BOUND
  ,C.COST_UPPER_BOUND
  ,COALESCE(C.FLAG_BELOW_L30D_MAX_ORDER_PRICE,0) AS FLAG_BELOW_L30D_MAX_ORDER_PRICE
  ,CASE WHEN C.L30D_MAX_ORDER_PRICE > 0 THEN C.L30D_MAX_ORDER_PRICE ELSE NULL END AS L30D_MAX_ORDER_PRICE 
  ,CASE 
    WHEN FLAG_BLACKLISTED_DOMAINS = 1 THEN NULL
    WHEN FIXED_LIST_PRICE IS NOT NULL THEN FIXED_LIST_PRICE
    ELSE VALIDATED_MAX_LIST_PRICE END AS ESTIMATED_LIST_PRICE
FROM ITEMS I
LEFT JOIN REDUNDANT_OFFERINGS RO ON I.ITEM_ID = RO.ITEM_ID
LEFT JOIN CHECKS C ON I.ITEM_ID = C.ITEM_ID
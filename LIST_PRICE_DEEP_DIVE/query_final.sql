WITH OFFERINGS AS (

SELECT
   t1.SIT_SITE_ID,
  SK.ITE_ITEM_ID,
  CONCAT(t1.SIT_SITE_ID, CAST(SK.ITE_ITEM_ID AS STRING)) AS ITEM_ID,
   LPAD(t1.SAP_SKU,18,'0') PL1P_OFFE_SAP_SKU,
   t1.status,
   t1.MELI_VENDOR_ID,
   t1.DOM_DOMAIN_ID,
   t1.CREATED_DATETIME,
   t1.UPDATED_DATETIME,
   --t1.BUYING_TERMS.SUGGESTED_RETAIL_PRICE.CURRENCY_ID PL1P_OFFE_SUGGESTED_PRICE_CURRENCY,
   --U.CURRENCY_ID PL1P_OFFE_UNIT_PRICE_CURRENCY,
   C.PL1P_PO_LAST_UNIT_PRICE_AMOUNT_FILTER as PL1P_OFFE_UNIT_PRICE_AMOUNT,
   t1.BUYING_TERMS.SUGGESTED_RETAIL_PRICE.AMOUNT as PL1P_OFFE_SUGGESTED_PRICE_AMOUNT
FROM
    `meli-bi-data.WHOWNER.LK_1P_OFFERING` as t1
--LEFT JOIN UNNEST (BUYING_TERMS.UNIT_PRICES) U
INNER JOIN
    (select b.* from
        (
        select
          tt1.SAP_SKU,
          tt1.SIT_SITE_ID,
          tt1.PL1P_PO_UNIT_PRICE as PL1P_PO_LAST_UNIT_PRICE_AMOUNT_FILTER,
          row_number() over(partition by tt1.SIT_SITE_ID, tt1.SAP_SKU order by tt1.PL1P_PO_SAP_CREATED_DATE DESC, PL1P_PO_POSITION_DELETED ASC) as rn
        FROM
        `meli-bi-data.WHOWNER.LK_PL1P_PURCHASE_ORDER_DETAIL` as tt1
        WHERE
          tt1.PL1P_PO_CLASS_DESC = 'Pedido Buying Portal'
        ) b where b.rn=1
    ) C ON
    SAFE_CAST(t1.SAP_SKU as int64) = SAFE_CAST(C.SAP_SKU as int64) and t1.SIT_SITE_ID=C.SIT_SITE_ID
LEFT JOIN `meli-bi-data.WHOWNER.LK_PL1P_ITE_VAR_SKU` SK ON t1.SIT_SITE_ID = SK.SIT_SITE_ID AND LPAD(t1.SAP_SKU,18,'0')  = LPAD(SK.ITE_ITEM_SAP_SKU,18,'0') 
WHERE 1=1
    --LOWER(t1.status) = 'active' 
    AND NOT (COALESCE(t1.LABELS,'null') LIKE '%test%')
    AND SK.ITE_ITEM_ID IS NOT NULL

--ORDER BY 1,2
)


,MAX_ORDER_PRICE AS (
  SELECT
    t1.SIT_SITE_ID,
    t1.ITE_ITEM_ID,
    CONCAT(t1.SIT_SITE_ID, t1.ITE_ITEM_ID) as ITEM_ID,
    MAX(t1.ORD_ITEM.UNIT_PRICE	) order_max_price
FROM `meli-bi-data.WHOWNER.BT_ORD_ORDERS` as t1
INNER JOIN
    `meli-bi-data.WHOWNER.LK_CUS_CUSTOMERS_DATA` as t2 ON t1.ord_seller.id=t2.CUS_CUST_ID, unnest(CUS_INTERNAL_TAGS) int_tags
WHERE
    int_tags in ('first_party')
    AND t1.ORD_CREATED_DT >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
    AND t1.ord_status not in ('cancelled', 'invalid', 'under_review')
GROUP BY
    ALL
)

SELECT OFF.*,
  MOP.order_max_price,
  FLP.FIXED_LIST_PRICE,
  CASE WHEN LSK.SKU IS NOT NULL THEN 1 ELSE 0 END AS FLAG_SKU_VALIDATION_EXCEPTION,
  IT.ITE_ITEM_STATUS,
FROM OFFERINGS OFF
LEFT JOIN MAX_ORDER_PRICE AS MOP ON OFF.SIT_SITE_ID =  MOP.SIT_SITE_ID AND OFF.ITE_ITEM_ID = MOP.ITE_ITEM_ID
LEFT JOIN ( SELECT ITEM_ID, MAX(LIST_PRICE)  AS FIXED_LIST_PRICE FROM SBOX_PRICING1P.BLOCK_ITEMS_LIST_PRICE_FIXED_VALUES GROUP BY ITEM_ID) AS FLP ON OFF.ITEM_ID = FLP.ITEM_ID
LEFT JOIN SBOX_PRICING1P.BLOCK_ITEMS_LIST_PRICE_LISTADO_SKUS LSK ON SAFE_CAST(OFF.PL1P_OFFE_SAP_SKU AS BIGINT) = LSK.SKU
LEFT JOIN WHOWNER.LK_ITE_ITEMS IT ON OFF.SIT_SITE_ID = IT.SIT_SITE_ID AND OFF.ITE_ITEM_ID = IT.ITE_ITEM_ID